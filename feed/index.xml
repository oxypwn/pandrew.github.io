<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paul Liljenbergs Blog</title>
    <description>Tyler rants about things</description>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    
      
        <item>
          <title>Arks: From block to solid rock!</title>
          <description>&lt;p&gt;This is the first post for the &lt;code&gt;pandrew/arks&lt;/code&gt; repository used to install archlinux unattendedly. From this momement this blog will be used
as a tool to document the progress for this project.&lt;/p&gt;

&lt;p&gt;The older project &lt;code&gt;pandrew/ks&lt;/code&gt; was intended to be multi-branched so when installing from an url it was looking at the branch for its code. That meant that each os had its own branch. 
I thought it was time for a change and give the installation system for archlinux a new repo of its own. This will make it easier to maintain fixes and not mix these with the other installation systems.&lt;/p&gt;

&lt;p&gt;Last weeks updates has mostly been focused on updating documentation for the new repo. Besides documenting the profiles; there have also been some code review as it was quite  a while since
I installed archlinux using this system. The documentaion should also be more easily read using &lt;a href=&quot;http://progrium.viewdocs.io/viewdocs&quot;&gt;viewdocs.io&lt;/a&gt; and you can read the docs &lt;a href=&quot;http://pandrew.viewdocs.io/arks&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are two new features to implement in Arks for this course:&lt;/p&gt;

&lt;h3 id=&quot;toc_0&quot;&gt;Account passwords via mail&lt;/h3&gt;

&lt;p&gt;The basic idea is that the users being added in the profile should have their passwords sent via email. These passwords is autogenerated and the user will be forced to update this
upon first login. I will use mailguns api to trigger the mailing function for every user being installed. With the demo account we can add upp to 300 users per day for a node. 
This should be fairly easy as all users have their own script. That way we can set each users email and we place the api key in the profile for the node.
If the api key is set it will email the user and if it&amp;#39;s not it will set the password to the username.&lt;/p&gt;

&lt;h3 id=&quot;toc_1&quot;&gt;Puppet/Chef integration&lt;/h3&gt;

&lt;p&gt;This is the second step in the upgrade for Arks and it involves integrating Chef and/or Puppet into the system. If the &lt;code&gt;foo&lt;/code&gt; is set it will trigger the installation of that particular block and
talk to server &lt;code&gt;bar&lt;/code&gt; for further instructions upon final reboot.&lt;/p&gt;

&lt;p&gt;As server I will use either the Chef enterprise or the Puppet counterpart so we can be sure that we have a working server. They usually have support for upp to 5 or 10 nodes and should be enough
for this project.&lt;/p&gt;
</description>
          <pubDate>Mon, 27 Jan 2014 00:00:00 +0100</pubDate>
          <link>http://localhost:4000//post/new-post</link>
          <guid isPermaLink="true">http://localhost:4000//post/new-post</guid>
        </item>
      
    
      
        <item>
          <title>Final updates and conclusion for this course</title>
          <description>&lt;p&gt;This update is more a summary of the status of Arks - the unattended installation framework for Archlinux&lt;/p&gt;

&lt;p&gt;So far the following new features have been implemented and is working in Arks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Progrium/keychain.io support&lt;/li&gt;
&lt;li&gt;  Email one-time passwords.&lt;/li&gt;
&lt;li&gt;  Puppet provisioning.&lt;/li&gt;
&lt;li&gt;  Notify your iPhone when installation is complete.&lt;/li&gt;
&lt;li&gt;  Notify via email when an error occur.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Besides this Arks has great error handling letting the user besides being notified when it has an error letting the user fix the problem right there in the middle of the installation. You don&amp;#39;t have to start over. All nodes and users have their own profiles.  That way you can specify all users for one node and all users can have individual settings.  To help installation Arks tries to follow Beginners&amp;#39; Guide. Arks installs a node below one minute and the time Arks spend is dependant on how much you cram in your machine.&lt;/p&gt;

&lt;h1 id=&quot;toc_0&quot;&gt;Upcoming features&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;  Efi support.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;toc_1&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;These weeks I have been focusing on Arks and it has been intense.  Alongside Arks I have been experimenting with Apache Mesos and Marathon; diving into more advanced scripting techniques for installation. I really enjoy reading peoples code and this have helped me writing better code myself. Its not only about writing code, but all the different ways one simple application can be written just for the purpose of doing one simple thing. &lt;/p&gt;
</description>
          <pubDate>Sun, 19 Jan 2014 00:00:00 +0100</pubDate>
          <link>http://localhost:4000//post/final-updates-and-conclusion-for-this-course</link>
          <guid isPermaLink="true">http://localhost:4000//post/final-updates-and-conclusion-for-this-course</guid>
        </item>
      
    
      
        <item>
          <title>Control Arks via puppet</title>
          <description>&lt;p&gt;In this status update iv&amp;#39;e taken a look at puppet/chef integration. The first thing to understand is that both puppet and chef is in a high development state as both packages are only available in aur (the user repository for archlinux). I had no luck using the omnibus installer for chef as it cant be installed unattended from aur with packer. This leaves us to puppet.&lt;/p&gt;

&lt;p&gt;Client and server installation is no biggies. Installing from aur gives no errors and using puppetlabs repos in any ubuntu/debian works like a charm. The issues iv&amp;#39;e encountered where that the server (puppetmaster) had issues accepting the certificate from client if they where behind nat. To make demo scenarios easier the puppetmaster was installed in the cloud and the clients was supposed to talk to the server behind nat. It seems that the server need to have fqdn for both clients and itself to work. I dont think i would see the same type of error if every client had its own accessible domain. Putting the puppetmaster within the same net was more successfull. Cleaning up the old certs for client and server and the server recognices the certificate request.&lt;/p&gt;

&lt;p&gt;Next step is creating a function that does something like this...&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;if PUPPET_SERVER is set
    install puppet
    if PUPPET_CONF is set
        curl PUPPET_CONF to /etc/puppet/puppet.conf
    else
        inject PUPPET_SERVER into /etc/puppet/puppet.conf
    fi
    start puppet agent on boot
fi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Todo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build function&lt;/li&gt;
&lt;li&gt;Test integration of server/client behind nat.&lt;/li&gt;
&lt;/ul&gt;
</description>
          <pubDate>Mon, 13 Jan 2014 00:00:00 +0100</pubDate>
          <link>http://localhost:4000//post/control-arks-via-puppet</link>
          <guid isPermaLink="true">http://localhost:4000//post/control-arks-via-puppet</guid>
        </item>
      
    
      
        <item>
          <title>Arks: Credentials via email</title>
          <description>&lt;p&gt;This update of Arks include a couple of bugs in the &lt;code&gt;user.sh&lt;/code&gt; that affected multiple user logins. I&amp;#39;ve also added a new function to handle adding multiple groups.
Now when we set &lt;code&gt;ADDTOGROUPS=&amp;quot;users,sudo&amp;quot;&lt;/code&gt;; the function will look at /etc/group and add any non existent groups. &lt;/p&gt;

&lt;p&gt;Arks is now able to send the credentials via email.&lt;/p&gt;

&lt;p&gt;To enable this you need to have an api-key and a domain for mailgun. Set the &lt;code&gt;API_KEY_EMAIL&lt;/code&gt; in your host profile. If you have set the &lt;code&gt;EMAIL&lt;/code&gt; variable for a user arks will try to send you your password.&lt;/p&gt;

&lt;p&gt;There are two new features to implement in Arks for this course:&lt;/p&gt;

&lt;h2 id=&quot;toc_0&quot;&gt;Account passwords via mail [Implemented]&lt;/h2&gt;

&lt;p&gt;The basic idea is that the users being added in the profile should have their passwords sent via email. These passwords is autogenerated and the user will be forced to update this
upon first login. I will use mailguns api to trigger the mailing function for every user being installed. With the demo account we can add upp to 300 users per day for a node. 
This should be fairly easy as all users have their own script. That way we can set each users email and we place the api key in the profile for the node.
If the api key is set it will email the user and if it&amp;#39;s not it will set the password to the username.&lt;/p&gt;

&lt;h2 id=&quot;toc_1&quot;&gt;Puppet/Chef integration&lt;/h2&gt;

&lt;p&gt;This is the second step in the upgrade for Arks and it involves integrating Chef and/or Puppet into the system. If the &lt;code&gt;foo&lt;/code&gt; is set it will trigger the installation of that particular block and
  talk to server &lt;code&gt;bar&lt;/code&gt; for further instructions upon final reboot.&lt;/p&gt;

&lt;p&gt;As server I will use either the Chef enterprise or the Puppet counterpart so we can be sure that we have a working server. They usually have support for upp to 5 or 10 nodes and should be enough
  for this project.&lt;/p&gt;
</description>
          <pubDate>Fri, 03 Jan 2014 00:00:00 +0100</pubDate>
          <link>http://localhost:4000//post/arks-credentials-via-email</link>
          <guid isPermaLink="true">http://localhost:4000//post/arks-credentials-via-email</guid>
        </item>
      
    
  </channel>
</rss>
